# 1. while 循环
# 基本语法：
# 定义初始变量
# while 条件:
#     循环体
#     改变变量
i = 1 # 定义初始变量，记录循环的次数，i = 1 表示从第一次开始
while i <= 2:
    print('好好学习，天天向上！')
    i += 1 # 改变变量，每次循环结束后，i = i + 1
# 注意；如果没有改变变量，条件一直满足，就会一直循环下去，一直执行循环体，直到内存溢出

# 1.2 死循环
# 无法终止的循环，程序会一直执行，直到内存溢出
# while True:
#     循环体
# while True: # 条件一直为真，就会一直执行，从而形成一个死循环
#这里只要不是0或者False会一直死循环, 1,2,'haha'等都会死循环
#    print('好好学习，天天向上！')
# while False:
#    print('好好学习，天天向上！') # 条件一直为假，就不会执行循环体，从而形成一个死循环

# 1.3 while循环应用：计算1-100的和
i = 1 # 定义初始变量，记录循环的次数，i = 1 表示从第一次开始
sum = 0 #定义初始变量，记录和，sum = 0 表示从0开始
while i <= 100:
    # print(i) # 打印i的值
    sum += i # 每次循环的计算结果和i相加，然后赋值给sum
    i += 1   # 改变变量，每次循环结束后，i = i + 1
    # print ('1-100的和为：', sum) # 在循环内，循环输出计算结果
print ('1-100的和为：', sum) # 在循环外，只输出最终的计算结果


# 2. while循环嵌套
# 一个while循环里面还有一个while循环
# 基本格式：
# while 条件1:
#     循环体1
#     while 条件2:
#         循环体2
#         改变变量2
#     改变变量1
# 注意：缩紧决定层级，严格控制缩进，最好自动缩进
# i = 1 # 定义一个变量记录外循环的次数
# while i <= 3: # 外循环
#     print(f'这是第{i}次外循环')
#     j = 1 # 定义一个变量记录内循环的次数
#     while j <= 5: # 内循环
#         print(f'这是第{j}次内循环')
#         j += 1 # 改变变量，每次循环结束后，j = j + 1
#     i += 1 # 改变变量，每次循环结束后，i = i + 1
# # 注意：外循环执行一次，内循环执行完整的循环，然后外循环再执行一次，内循环再执行完整的循环，以此类推


# 3. for循环
# 基本格式：
# for 迭代对象 in 可迭代对象:
#     循环体
# 注意冒号和缩进
# str = 'hellopython' # 定义一个字符串 str = 1234不可以，整型不是一个可迭代对象，只能‘1234’
# # 可迭代对象就是要去遍历取值的整体，现在是字符串str
# for i in str: # i是临时变量，可以随便写，i是常规写法
#     print(i) # 循环体，打印i的值

# 3.2 range()函数
# 用来记录循环次数，相当于一个计数器
# range(start, stop, step)
# 如果range里面只有一个参数，那么默认从0开始，步长为1，这个参数是循环的次数
for i in range(1,6): # 从1开始,到6结束,不包括6,步长默认为1,包前不包后[1,6)
    print('hello') # 输出1-5

# 3.3 for循环应用：计算1-100的和
sum = 0 # 定义一个变量记录和，sum = 0 表示从0开始
for i in range(1,101): # 从1开始,到101结束,不包括101,步长默认为1,包前不包后[1,101)
    sum += i # 每次循环的计算结果和i相加，然后赋值给sum
    # print('计算结果：', sum) # 在循环内，循环输出计算结果
print('计算结果：', sum)


# 4. 循环控制语句 break、continue
# break：终止循环，跳出循环体
# continue：跳过本次循环，继续下一次循环
# i = 1
# if i <=5:
#     print('我在吃苹果')
#     break
# 报错：break和continue只能在循环体内使用, if 语句只是一个条件判断，不是循环。

# 4.1 break
# 作用：某一条件满足时，退出循环
# i = 1
# while i <= 5:
#     print(f'我在吃第{i}个苹果')
#     if i == 3:
#         print('吃饱了，不吃了')
#         break # 当i=3时，退出循环,结束break所在的循环
#     i += 1

# 4.2 continue
# 作用：某一条件满足时，跳过本次循环，继续下一次循环
# i = 1
# while i <= 5:
#     print(f'小明在吃第{i}个苹果')
#     if i == 3:
#         print(f'吃到了虫子，第{i}个苹果不吃了')
#         i += 1
#         # 在continue之前，一定要改变变量，否则会形成死循环，因为跳过剩余代码，直接开始下一次循环
#         continue # 当i=3时，跳过本次循环，继续下一次循环
#     i += 1

for i in range(5):
    if i == 3:
        # break # 当i=3时，退出循环,结束break所在的循环
        continue # 当i=3时，跳过本次循环，继续下一次循环, 不输出3
    print(i)